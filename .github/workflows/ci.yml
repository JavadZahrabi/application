name: CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  DOCKER_REPO_NAME: ${{secrets.DOCKER_REPO_NAME}}

jobs:

  build:
    runs-on: ubuntu-latest
    
    outputs:
      date: ${{ steps.tagInfo.outputs.date }}
      shaShort: ${{ steps.tagInfo.outputs.shaShort }}    
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Get tag info
        id: tagInfo
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
          echo "::set-output name=shaShort::$(git rev-parse --short HEAD)"    
      
      - name: Build the Docker image
        run: docker build -t $DOCKER_USER/$DOCKER_REPO_NAME .

      - name: Login to Docker Hub
        run: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Push image to dockerhub
        run: |
          docker tag $DOCKER_USER/$DOCKER_REPO_NAME:latest $DOCKER_USER/$DOCKER_REPO_NAME:${{ steps.tagInfo.outputs.date }}-${{ steps.tagInfo.outputs.shaShort }}
          echo "Push image $DOCKER_USER/$DOCKER_REPO_NAME:${{ steps.tagInfo.outputs.date }}-${{ steps.tagInfo.outputs.shaShort }}"
          docker push $DOCKER_USER/$DOCKER_REPO_NAME:${{ steps.tagInfo.outputs.date }}-${{ steps.tagInfo.outputs.shaShort }}

  copy-push-dev-setting-update-image-tag:
    needs: build
    runs-on: ubuntu-latest
     
    steps:

      - name: Checkout application repository
        uses: actions/checkout@v3
        with:
          path: ./application

      - name: Checkout deployment repository
        uses: actions/checkout@v3
        with:
          repository: JavadZahrabi/deployment
          token: ${{ secrets.ACTIONS_TOKEN }}
          path: ./deployment
      
      - name: Copy & push dev_settings
        run: |
            FILE1=./application/environment-variables/dev/dev_settings.yml
            FILE2=./deployment/envs/dev/dev_settings.yml
            if cmp -s "$FILE1" "$FILE2"; then
              echo "dev_settings are same"
            else
              echo "dev_settings are different"
              cp -R ./application/environment-variables/dev/dev_settings.yml ./deployment/envs/dev
              echo "copy done"
            fi

            export tag=${{needs.build.outputs.date}}-${{needs.build.outputs.shaShort}}

            echo update Docker Image tag on dev
            cd ./deployment/envs/dev
            kustomize edit set image docker.io/javadza/environment-promotion=docker.io/javadza/environment-promotion:${tag}

            echo push new dev-setting and new Tag to master-dev

            cd ../..
            git add .
            git config user.name JavadZahrabi
            git config user.email ja.zahrabi@gmail.com
            git commit -am "update dev-setting and image tag in deployment repository"
            git push   

  copy-push-staging-setting-update-image-tag-PR:
    needs: [build, copy-push-dev-setting-update-image-tag]
    runs-on: ubuntu-latest
     
    steps:

      - name: Checkout application repository
        uses: actions/checkout@v3
        with:
          path: ./application

      - name: Checkout deployment repository
        uses: actions/checkout@v3
        with:
          repository: JavadZahrabi/deployment
          token: ${{ secrets.ACTIONS_TOKEN }}
          path: ./deployment
      
      - name: Copy & push staging_settings
        run: |
            FILE1=./application/environment-variables/staging/staging_settings.yml
            FILE2=./deployment/envs/staging/staging_settings.yml
            if cmp -s "$FILE1" "$FILE2"; then
              echo "staging_settings are same"
            else
              echo "staging_settings are different"
              cp -R ./application/environment-variables/staging/staging_settings.yml ./deployment/envs/staging
              echo "copy done"
            fi

            export tag=${{needs.build.outputs.date}}-${{needs.build.outputs.shaShort}}

            echo update Docker Image tag on dev
            cd ./deployment/envs/staging
            kustomize edit set image docker.io/javadza/environment-promotion=docker.io/javadza/environment-promotion:${tag}

            echo push new staging-setting and new Tag to branch staging

            cd ../..
            git checkout -b "staging"
            git add .
            git config user.name JavadZahrabi
            git config user.email ja.zahrabi@gmail.com
            git commit -am "update staging-setting and image tag in deployment repository"
            git push --set-upstream -f origin staging

  copy-push-prod-setting-update-image-tag-PR:
    needs: [build, copy-push-dev-setting-update-image-tag, copy-push-staging-setting-update-image-tag-PR]
    runs-on: ubuntu-latest
     
    steps:

      - name: Checkout deployment repository
        uses: actions/checkout@v3
        with:
          path: ./deployment

      - name: Checkout deployment repository
        uses: actions/checkout@v3
        with:
          repository: JavadZahrabi/deployment
          token: ${{ secrets.ACTIONS_TOKEN }}
          path: ./deployment
      
      - name: Copy & push prod_settings
        run: |
            FILE1=./application/environment-variables/prod/prod_settings.yml
            FILE2=./deployment/envs/prod/prod_settings.yml
            if cmp -s "$FILE1" "$FILE2"; then
              echo "prod_settings are same"
            else
              echo "prod_settings are different"
              cp -R ./application/environment-variables/prod/prod_settings.yml ./deployment/envs/prod
              echo "copy done"
            fi

            export tag=${{needs.build.outputs.date}}-${{needs.build.outputs.shaShort}}

            echo update Docker Image tag on prod
            cd ./deployment/envs/prod
            kustomize edit set image docker.io/javadza/environment-promotion=docker.io/javadza/environment-promotion:${tag}

            echo push new prod-setting and new Tag to branch prod

            cd ../..
            git checkout -b "prod"
            git add .
            git config user.name JavadZahrabi
            git config user.email ja.zahrabi@gmail.com
            git commit -am "update prod-setting and image tag ${tag} in deployment repository"
            git push --set-upstream -f origin prod